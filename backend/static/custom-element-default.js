const defaultCustomElement = (elementName, elementTag) => {
  return `
/** this class is autogenerated from AVE */
class ${elementName} extends HTMLElement {
  /** called when DOM element is rendered */
  connectedCallback() {
    this.render();
    this.attach();
  }
  /** called when DOM element is disposed */
  disconnectedCallback() {
    this.detach();
  }
  /** called when '${elementTag}-update' event is called */
  updateCallback(event) {
    /** use event.details to get data from event */
  }
  /** called when '${elementTag}' is created */
  attach() {
    window.addEventListener('${elementTag}-update', this.updateCallback);
    this.dispatchEvent(new CustomEvent('${elementTag}-initialized', {
      bubbles: true,
    }));
  }
  /** called when '${elementTag}' is destroyed */
  detach() {
    window.removeEventListener('${elementTag}-update', this.updateCallback);
    this.dispatchEvent(new CustomEvent('${elementTag}-disposed', {
      bubbles: true,
    }));
  }
  /** render method - put here HTML */
  render(data){
    window.requestAnimationFrame(() => {
      this.innerHTML = '<span>${elementTag} works!</span>';
    });
  }
}
window.customElements.define('${elementTag}', ${elementName});
`.trim();
}

module.exports = defaultCustomElement;